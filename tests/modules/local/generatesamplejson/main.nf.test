nextflow_process {

    name "Test Process GENERATE_SAMPLE_JSON"
    script "modules/local/generatesamplejson/main.nf"
    process "GENERATE_SAMPLE_JSON"

    test("Basic execution, check output.") {

        when {
            params {
                outdir = "tests/results"
            }
            process {
                """
                input[0] = new Tuple(["id": "SAMPLE1"], [file("sample1_R1.fastq.gz"), file("sample1_R2.fastq.gz")], file("SAMPLE1.assembly.fa.gz"))
                """
            }
        }

        then {
            assert process.success

            with(process.out) {
                // check if emitted output has been created
                assert json.size() == 1

                // parse output json file
                def sample_json_string = path(json.get(0)[1]).linesGzip.join("\n")
                def parser = new groovy.json.JsonSlurper()
                def sample_json = parser.parseText(sample_json_string)

                assert sample_json.files.samples.SAMPLE1[0].path.equals("assembly/SAMPLE1.assembly.fa.gz")
                assert sample_json.metadata.samples.SAMPLE1.reads[0].equals("sample1_R1.fastq.gz")
                assert sample_json.metadata.samples.SAMPLE1.reads[1].equals("sample1_R2.fastq.gz")
            }
        }

    }

}
